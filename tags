!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/bageljr/.local/share/chezmoi/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	/p5.9.20210905.0/
<C-n>	dot_config/nvim/init.vim	/^nnoremap <C-n> :NvimTreeToggle<CR>$/;"	m
<leader>dr	dot_config/nvim/init.vim	/^nnoremap <silent> <leader>dr :lua require'dap'.repl.open()<CR>$/;"	m
<leader>lp	dot_config/nvim/init.vim	/^nnoremap <silent> <leader>lp :lua require'dap'.set_breakpoint(nil, nil, vim.fn.input('Log point /;"	m
<leader>n	dot_config/nvim/init.vim	/^nnoremap <leader>n :NvimTreeFindFile<CR>$/;"	m
<leader>r	dot_config/nvim/init.vim	/^nnoremap <leader>r :NvimTreeRefresh<CR>$/;"	m
CFLAGS	dot_config/environment.d/envars.conf	/^CFLAGS="-march=native -O3 -pipe"$/;"	k
CLUTTER_BACKEND	dot_config/environment.d/envars.conf	/^CLUTTER_BACKEND=wayland$/;"	k
DOCKER_BUILDKIT	dot_config/environment.d/envars.conf	/^DOCKER_BUILDKIT=1$/;"	k
DOCKER_HOST	dot_config/environment.d/envars.conf	/^DOCKER_HOST="unix:\/\/$XDG_RUNTIME_DIR\/podman\/podman.sock"$/;"	k
EDITOR	dot_config/environment.d/envars.conf	/^EDITOR=nvim$/;"	k
LIBVA_DRIVER_NAME	dot_config/environment.d/envars.conf	/^LIBVA_DRIVER_NAME=radeonsi$/;"	k
M.code_action_listener	dot_config/nvim/lua/code_action_utils.lua	/^function M.code_action_listener()$/;"	f
M.reload_continue	dot_config/nvim/lua/dap_util.lua	/^function M.reload_continue()$/;"	f
MOZ_DBUS_REMOTE	dot_config/environment.d/envars.conf	/^MOZ_DBUS_REMOTE=1$/;"	k
MOZ_ENABLE_WAYLAND	dot_config/environment.d/envars.conf	/^MOZ_ENABLE_WAYLAND=1$/;"	k
OPENCV_LOG_LEVEL	dot_config/environment.d/envars.conf	/^OPENCV_LOG_LEVEL=ERROR$/;"	k
PATH	dot_config/environment.d/envars.conf	/^PATH=$PATH:\/home\/bageljr\/.local\/bin$/;"	k
QT_QPA_PLATFORM	dot_config/environment.d/envars.conf	/^QT_QPA_PLATFORM=wayland$/;"	k
RUSTC_WRAPPER	dot_config/environment.d/envars.conf	/^RUSTC_WRAPPER=sccache$/;"	k
RUSTFLAGS	dot_config/environment.d/envars.conf	/^RUSTFLAGS="-C opt-level=3 -C target-cpu=native"$/;"	k
SYSTEMD_EDITOR	dot_config/environment.d/envars.conf	/^SYSTEMD_EDITOR=nvim$/;"	k
VAAPI_MPEG4_ENABLED	dot_config/environment.d/envars.conf	/^VAAPI_MPEG4_ENABLED=true$/;"	k
VDPAU_DRIVER	dot_config/environment.d/envars.conf	/^VDPAU_DRIVER=radeonsi$/;"	k
['[M']	dot_config/nvim/lua/ts.lua	/^        ['[M'] = '@function.outer',$/;"	f
['[m']	dot_config/nvim/lua/ts.lua	/^        ['[m'] = '@function.outer',$/;"	f
[']M']	dot_config/nvim/lua/ts.lua	/^        [']M'] = '@function.outer',$/;"	f
[']m']	dot_config/nvim/lua/ts.lua	/^        [']m'] = '@function.outer',$/;"	f
['af']	dot_config/nvim/lua/ts.lua	/^        ['af'] = '@function.outer',$/;"	f
['if']	dot_config/nvim/lua/ts.lua	/^        ['if'] = '@function.inner',$/;"	f
config	dot_config/nvim/lua/plugins.lua	/^    config = function() require'nvim-tree'.setup {$/;"	f
dap.listeners.after.event_initialized["dapui_config"]	dot_config/nvim/lua/dap_setup.lua	/^dap.listeners.after.event_initialized["dapui_config"] = function()$/;"	f
dap.listeners.after.event_initialized["dapui_config"]	dot_config/nvim/lua/debuggers.lua	/^dap.listeners.after.event_initialized["dapui_config"] = function()$/;"	f
dap.listeners.before.event_exited["dapui_config"]	dot_config/nvim/lua/dap_setup.lua	/^dap.listeners.before.event_exited["dapui_config"] = function()$/;"	f
dap.listeners.before.event_exited["dapui_config"]	dot_config/nvim/lua/debuggers.lua	/^dap.listeners.before.event_exited["dapui_config"] = function()$/;"	f
dap.listeners.before.event_terminated["dapui_config"]	dot_config/nvim/lua/dap_setup.lua	/^dap.listeners.before.event_terminated["dapui_config"] = function()$/;"	f
dap.listeners.before.event_terminated["dapui_config"]	dot_config/nvim/lua/debuggers.lua	/^dap.listeners.before.event_terminated["dapui_config"] = function()$/;"	f
g:coq_settings	dot_config/nvim/init.vim	/^let g:coq_settings = { 'auto_start': 'shut-up' }$/;"	v
myspacevim#before	dot_SpaceVim.d/autoload/myspacevim.vim	/^function! myspacevim#before() abort$/;"	f
on_attach	dot_config/nvim/lua/lsp.lua	/^local on_attach = function(client, bufnr)$/;"	f
program	dot_config/nvim/lua/dap_setup.lua	/^    program = function()$/;"	f
program	dot_config/nvim/lua/debuggers.lua	/^    program = function()$/;"	f
s:cargo_task	dot_SpaceVim.d/autoload/myspacevim.vim	/^  function! s:cargo_task() abort$/;"	f
s:make_tasks	dot_SpaceVim.d/autoload/myspacevim.vim	/^  function! s:make_tasks() abort$/;"	f
